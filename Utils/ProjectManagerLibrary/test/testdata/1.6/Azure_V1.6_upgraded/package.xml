<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 Copyright 2013 Microsoft Open Technologies, Inc.
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project basedir="." default="createwapackage" name="Azure_V1.6_upgraded">

  <!-- This task is used for storing properties specific to Windows Azure cloud service project -->
  <target description="Stores properties used by Windows Azure project" name="waprojectproperties">
    

    
    
    <property name="creator.version" value="1.7.0"/>
  <property name="project.enableremoteaccess" value="true"/>
    <property name="cert.windowsazureremotedesktop" value="${basedir}\cert\SampleRemoteAccessPublic.cer"/>
    <property name="project.WorkerRole1.sessionaffinity.inputendpoint" value="http"/>
    <property name="project.WorkerRole1.sessionaffinity.internalendpoint" value="http_SESSION_AFFINITY"/>
  </target>

  <!-- Force emulator reset to ensure no locks on deploy directory -->
  <target name="checkResetScript">
    <available file="${basedir}\emulatorTools\ResetEmulator.cmd" property="fileExists"/>
  </target>
  <target depends="checkResetScript" if="fileExists" name="resetEmulator">
    <exec executable="${basedir}\emulatorTools\ResetEmulator.cmd" failifexecutionfails="false"/>
  </target>

  <!-- This task creates a Windows Azure cloud service package -->
  <target depends="resetEmulator" description="Creates a Windows Azure package" name="createwapackage">
    <taskdef classname="com.microsoftopentechnologies.windowsazure.tools.build.WindowsAzurePackage" classpath="${basedir}\.cspack.jar" name="windowsazurepackage"/>

    <!-- This is the directory where the Windows Azure deployment package or folder will be saved -->
    <property location="${basedir}\deploy" name="wapackagedir"/>

    <move failonerror="false" file="${wapackagedir}" overwrite="true" tofile="${wapackagedir}.old"/>
    <mkdir dir="${wapackagedir}"/>

    <parallel failonany="true">
      <delete dir="${wapackagedir}.old" includeemptydirs="true"/>

      <!-- Create a Windows Azure deployment package
		    
			Attributes:

			packagefilename:
					(Required) The name, including the extension but not the full path, of the deployment package or 
					folder to be built. By convention, if creating a package file for deployment to the cloud 
					(packagetype="cloud"), use the *.cspkg extension. If creating only a directory layout for local 
					testing in the development fabric (packagetype="True"), use the *.csx extension.

			[configurationfilename]:
					The name, including the extension but not the full path, of the cloud service configuration file (*.cscfg).
					This file must exist in the root directory of the project (see the projectDir attribute). 
					If not specified, the default name "ServiceConfiguration.cscfg" will be assumed.
			
			[definitionfilename]:
					The name, including the extension but not the full path, of the cloud service definition file (*.csdef). 
					This file must exist in the root directory of the project (see the projectdir attribute).
					If not specified, the default name "ServiceDefinition.csdef" is assumed.

			[emulatortoolsdir]:
					The directory where the emulator tools will be created by the build process.
					If not specified, the default "emulatorTools" directory in the project directory 
					will be used.

			[packagedir]: 
					The target directory of the deployment package file or folder. 
					If not specified, "<projectdir>/deploy" will be used.

			[packagetype = {cloud | local}]
					cloud:	(default) Builds a package file for deployment to the Windows Azure cloud, for example via the Windows 
							Azure management portal.
					local:	Creates a package directory layout for local testing in the Windows Azure Compute 
							Emulator and a command script (csrun.cmd) for you to start your cloud service in the development 
							fabric more easily.

			[projectdir]:
					The root directory of the project. The service definition (*.csdef) and service configuration (*.cscfg) 
					files are expected to exist there. If not specified, the task will attempt to determine the project 
					directory automatically.

			[sdkdir]: 
					The directory of the cspack.exe tool. If not specified, an attempt will be made to find it automatically.
			
			[emulatordir]:
					The directory of the Windows Azure Emulator installation. If not specified, an attempt will be made to find it automatically.

			-->
      <windowsazurepackage configurationfilename="ServiceConfiguration.cscfg" definitionfilename="ServiceDefinition.csdef" packagedir="${wapackagedir}" packagefilename="WindowsAzurePackage.cspkg" packagetype="local" projectdir="${basedir}">

        <!-- Create a sample role -->
        

        <!-- $TODO: To add more roles, copy and paste the workerrole element for each new role 
				 and modify the required settings:
					name:		Must match the "name" attribute from WorkerRole element from the service definition (.csdef) file
					approot:	The directory with the files and directories to include in the package (e.g. JRE, server 
								deployment, .war files, etc). After deployment, the contents of this folder will be available 
								the role instance's approot directory.
			-->
      <workerrole approotdir="${basedir}\WorkerRole1\approot" name="WorkerRole1">
          <startupenv name="_JAVA_OPTIONS" value="-agentlib:jdwp=transport=dt_socket,server=y,address=8090,suspend=n"/>
          <startupenv name="JAVA_HOME" value="c:\java"/>
          <startupenv name="LocalStorage1_PATH" value=""/>
          <startupenv name="LocalStorage2_PATH" value=""/>
        </workerrole>
        <workerrole approotdir="${basedir}\WorkerRole2\approot" name="WorkerRole2"/>
      </windowsazurepackage>
    </parallel>

  </target>

<target name="MyTarget">
    <available file="MyFile" property="MyProperty"/>
  </target>
</project>
